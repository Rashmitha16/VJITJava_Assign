5.1: Refer the case study 2 in page no: 5 and create an application for that requirement by creating packages and classes as given below:

a)	com.cg.eis.bean

package com.cg.eis.bean;
public class Employee {

	int id;
	String name;
	public double salary;
	public String designation;
	public String insurenceScheme;
	public Employee(int id,String name,double salary,String designation){
		this.id = id;
		this.name = name;
		this.salary = salary;
		this.designation = designation;
	}
	public int getId() {
		return id;
	}
	public void setId(int id) {
		this.id = id;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public double getSalary() {
		return salary;
	}
	public void setSalary(double salary) {
		this.salary = salary;
	}
	public String getDesignation() {
		return designation;
	}
	public void setDesignation(String designation) {
		this.designation = designation;
	}
	public String getInsurenceScheme() {
		return insurenceScheme;
	}
	public void setInsurenceScheme(String insurenceScheme) {
		this.insurenceScheme = insurenceScheme;
	}
}

b)com.cg.eis.service
package com.cg.eis.service;
import com.cg.eis.bean.Employee;

interface EmployeeService {
	 String getScheme(Employee e);
}
public class GetEmployeeServices implements EmployeeService {

	@Override
	public String getScheme(Employee e) {
		if((e.salary>5000 && e.salary<20000) && e.designation.equals("SystemAssociate")) {
			return "Scheme C";
		}
		else if((e.salary>=20000 && e.salary<40000) && e.designation.equals("Programmer")) {
			return "Scheme B";
		}
		else if(e.salary>=40000 && e.designation.equals("Manager")) {
			return "Scheme A";
		}
		else if(e.salary<5000 && e.designation.equals("Clerk")) {
		return null;
	    }
		return null;
	}
	
}

c)com.cg.eis.pl
package com.cg.eis.pl;
import java.util.Scanner;
import com.cg.eis.bean.Employee;
import com.cg.eis.service.GetEmployeeServices;
public class Userinputandoutputemployee {

	public static void main(String[] args) {
		@SuppressWarnings("resource")
		Scanner sc = new Scanner(System.in);
		int id;
		String name,designation,insuranceScheme;
		double salary;
		id = sc.nextInt();
		name = sc.next();
		salary = sc.nextDouble();
		designation = sc.next();
		Employee e1 = new Employee(id,name,salary,designation);
		GetEmployeeServices get1 = new GetEmployeeServices();
		insuranceScheme = get1.getScheme(e1);
		e1.setInsurenceScheme(insuranceScheme);
		System.out.println("Employee Details:\n");
		System.out.println("ID : "+e1.getId());
		System.out.println("\nNAME : "+e1.getName());
		System.out.println("\nSALARY : "+e1.getSalary());
		System.out.println("\nDESIGNATION : "+e1.getDesignation());
		System.out.println("\nINSURENCE SCHEME : "+e1.getInsurenceScheme());
	}

}

5.2: Use overrides annotation for the overridden methods available in a derived class of an interface of all the assignments
package com.cg.eis.exception;

public class EmployeeException extends RuntimeException {

	String message;

	public EmployeeException() {
			message = "";
		}

	public EmployeeException(String message) {
			this.message = message;
		}

	@Override
	public String toString() {
		return "[" + this.getClass().getName() + ":" + message + "]";
	}

	public String getMessage() {
		return super.getMessage();
	}

}

package com.cg.eis.pl;

import com.cg.eis.bean.*;
import com.cg.eis.exception.EmployeeException;
import com.cg.eis.service.*;
import java.util.*;

public class UserInput {

public static void main(String[] args) {
@SuppressWarnings("resource")
Scanner in = new Scanner(System.in);
System.out.println("Enter Details of Employee");
System.out.println("Enter ID Number");
int id = in.nextInt();
System.out.println("Enter Name");
String name = in.next();
System.out.println("Enter Designation Name (Programmer,System Associate,Manager,Clerk)");
String designation = in.next();
System.out.println("Enter salary");
double salary = in.nextDouble();
String insuranceScheme;

Employee e = new Employee();
e.setId(id);
e.setName(name);
e.setDesignation(designation);
// e.setSalary(salary);
EmployeeInsuranceScheme eis = new EmployeeInsuranceScheme();
insuranceScheme = eis.insuranceDetails(salary, designation);
e.setInsuranceScheme(insuranceScheme);
try {
e.setSalary(salary);
System.out.println("Employee id " + e.getId());
System.out.println("Employee Name " + e.getName());
System.out.println("Employee designation " + e.getDesignation());
System.out.println("Employee salary " + e.getSalary());
System.out.println("Employee insurance scheme " + e.getInsuranceScheme());
} catch (EmployeeException emp) {
System.out.println(emp.toString());
}

 System.out.println("Employee id "+ e.getId());
 System.out.println("Employee Name "+ e.getName());
 System.out.println("Employee designation "+ e.getDesignation());
 System.out.println("Employee salary "+ e.getSalary());
 System.out.println("Employee insurance scheme "+ e.getInsuranceScheme());

}

public static void checkSalary(double salary) throws EmployeeException {
if (salary < 3000) {
EmployeeException e = new EmployeeException("Salary less than 3000");
throw e;
}
}
}